#ifndef _LUOGU_GREEDY_KING_GAME_H
#define _LUOGU_GREEDY_KING_GAME_H

#include "god.h"

/*
 * 恰逢H国国庆，国王邀请n位大臣来玩一个有奖游戏。首先，他让每个大臣在左、右手上面分别写下一个整数，国王自己也在左、右手上各写一个整数。
 * 然后，让这n位大臣排成一排，国王站在队伍的最前面。排好队后，所有的大臣都会获得国王奖赏的若干金币，
 * 每位大臣获得的金币数分别是：排在该大臣前面的所有人的左手上的数的乘积除以他自己右手上的数，然后向下取整得到的结果。
 * 国王不希望某一个大臣获得特别多的奖赏，所以他想请你帮他重新安排一下队伍的顺序，使得获得奖赏最多的大臣，所获奖赏尽可能的少。注意，国王的位置始终在队伍的最前面。
 * 
 * 格式
 * 输入格式：
 *   第一行包含一个整数n，表示大臣的人数。
 *   第二行包含两个整数a和b，之间用一个空格隔开，分别表示国王左手和右手上的整数。
 *   接下来n行，每行包含两个整数a和b，之间用一个空格隔开，分别表示每个大臣左手和右手上的整数。
 * 
 * 输出格式：输出只有一行，包含一个整数，表示重新排列后的队伍中获奖赏最多的大臣所获得的金币数。
 * 
 * 样例1
 *   样例输入1
 *   3 
 *   1 1 
 *   2 3 
 *   7 4 
 *   4 6 
 *   
 *   样例输出1
 *   2
 *   
 * 限制
 * 每个测试点1s
 * 
 * 提示
 * 对于20%的数据，有1≤ n≤ 10，0 < a、b < 8；
 * 对于40%的数据，有1≤ n≤20，0 < a、b < 8；
 * 对于60%的数据，有1≤ n≤100；
 * 对于60%的数据，保证答案不超过10^9；
 * 对于100%的数据，有1 ≤ n ≤1,000，0 < a、b < 10000。
 */

// @lc code=start
class P1028_KingGame {
public:

};
// @lc code=end


#endif /*_LUOGU_GREEDY_KING_GAME_H*/
